<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Golang on MMbros</title>
    <link>http://mmbros.github.io/tags/golang/</link>
    <description>Recent content in Golang on MMbros</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>it</language>
    <managingEditor>server.mmbros@yandex.com (MMbros)</managingEditor>
    <webMaster>server.mmbros@yandex.com (MMbros)</webMaster>
    <lastBuildDate>Wed, 13 Apr 2016 23:25:21 +0200</lastBuildDate>
    
	<atom:link href="http://mmbros.github.io/tags/golang/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>monitoring</title>
      <link>http://mmbros.github.io/post/monitoring/</link>
      <pubDate>Wed, 13 Apr 2016 23:25:21 +0200</pubDate>
      <author>server.mmbros@yandex.com (MMbros)</author>
      <guid>http://mmbros.github.io/post/monitoring/</guid>
      <description>InfluxDB The platform for Storing/Managing/Collecting time-series data InfluxDB Client A Go client library written and maintained by the InfluxDB team Grafana Grafana provides a powerful and elegant way to create, explore, and share dashboards and data with your team and the world  InfluxDB InfluxDB is a time series database built from the ground up to handle high write and query loads. InfluxDB is meant to be used as a backing store for any use case involving large amounts of timestamped data, including DevOps monitoring, application metrics, IoT sensor data, and real-time analytics.</description>
    </item>
    
    <item>
      <title>The Go Programming Language</title>
      <link>http://mmbros.github.io/post/golang/</link>
      <pubDate>Sat, 31 Oct 2015 23:12:13 +0100</pubDate>
      <author>server.mmbros@yandex.com (MMbros)</author>
      <guid>http://mmbros.github.io/post/golang/</guid>
      <description>Go is an open source programming language that makes it easy to build simple, reliable, and efficient software
 golang.org wikipedia.en  Installation Install to a custom location and workspace setup:
 GOROOT: $HOME/local/go GOPATH: $HOME/Code/go  For full install instruction see Getting Started.
Download the archive and extract the archive into the destination folder. For example extract the archive into $HOME/local, creating a Go tree in $HOME/local/go:
tar -C $HOME/local -xzf go$VERSION.</description>
    </item>
    
  </channel>
</rss>